generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model dados_pessoais {
  id            Int      @id @default(autoincrement())
  id_user       Int
  cress         String?  @unique(map: "cress") @db.VarChar(32)
  crp           String?  @db.VarChar(32)
  telefone      String?  @db.Text
  cpf           String   @unique(map: "cpf") @db.VarChar(15)
  rg            String   @unique(map: "rg") @db.VarChar(15)
  endereco      String?  @db.Text
  especialidade String?  @db.Text
  data_nasc     DateTime @db.Date
  users         users    @relation(fields: [id_user], references: [id], onDelete: Cascade, map: "dados_pessoais_ibfk_1")

  @@index([id_user], map: "dados_pessoais_ibfk_1")
}

model sessions {
  id          Int      @id @default(autoincrement())
  id_user     Int
  data        DateTime @default(now()) @db.DateTime(0)
  ip          String   @db.Text
  last_access DateTime @default(now()) @db.DateTime(0)
  status      String   @default("active") @db.VarChar(32)
  hash        String   @unique(map: "hash") @db.VarChar(64)
  users       users    @relation(fields: [id_user], references: [id], onDelete: Cascade, map: "sessions_ibfk_1")

  @@index([id_user], map: "id_user")
}

model cadastro_usuario {
  id                           Int       @id @default(autoincrement())
  nome                         String    @db.Text
  nome_social                  String    @db.Text
  rg                           String?   @unique(map: "rg") @db.VarChar(15)
  orgao_expedidor              String?   @db.VarChar(20)
  natural_de                   String    @db.Text
  expedicao                    DateTime  @db.Date
  cpf                          String?   @unique(map: "cpf") @db.VarChar(15)
  nis                          String?   @unique(map: "nis") @db.VarChar(15)
  indentificacao_estrangeira   String    @db.Text
  telefone_celular             String?   @db.VarChar(20)
  telefone_celular_alternativo String?   @db.Text
  estado_civil                 String    @db.Text
  nacionalidade                String    @db.Text
  data_nasc                    DateTime? @db.Date
  escolaridade                 String    @db.Text
  sexo                         String    @db.Text
  profissao_ocupacao           String    @db.Text
  renda_individual             Float     @db.Float
  logradouro                   String    @db.Text
  bairro_setor                 String    @db.Text
  cep                          String    @db.VarChar(20)
  numero                       String    @db.VarChar(15)
  area                         String    @db.Text
  complemento                  String    @db.Text
  tipo_de_imovel               String    @db.Text
  numero_de_comodos            String    @db.VarChar(20)
  tempo_de_moradia             String    @db.VarChar(15)
  edificada_em                 String    @db.Text
  estado_de_conservacao        String    @db.Text
  saneamento_basico            String?   @db.Text
  forma_acesso                 String?   @db.Text
  observacao_cadastro          String?   @db.Text
  ponto_coleta                 String?   @db.Text
  local_cadastro               String?   @db.Text
  recebe_algum_beneficio       String?   @db.Text
  data                         DateTime  @db.DateTime(0)
  status                       String    @default("active") @db.VarChar(30)
  hash                         String    @unique(map: "hash") @db.VarChar(64)
  user                         String    @db.VarChar(64)
}

model users {
  id               Int                @id @default(autoincrement())
  nome             String             @db.Text
  email            String             @unique(map: "email") @db.VarChar(64)
  senha            String             @db.Text
  data             DateTime           @default(now()) @db.DateTime(0)
  status           String             @default("pending") @db.VarChar(32)
  hash             String             @unique(map: "hash") @db.VarChar(64)
  dados_pessoais   dados_pessoais[]
  permissions      permissions[]
  sessions         sessions[]
}

model nucleo_familiar {
  id               Int      @id @default(autoincrement())
  responsavel      String   @db.Text
  observacao       String   @db.Text
  nome             String   @db.Text
  data_nasc        DateTime @db.DateTime(0)
  parentesco       String   @db.Text
  renda_individual Float    @db.Float
  nis              String   @db.VarChar(20)
  data             DateTime @db.DateTime(0)
}

model permissions {
  id         Int      @id @default(autoincrement())
  id_user    Int
  permission String   @db.VarChar(32)
  ref        String?  @db.Text
  data       DateTime @default(now()) @db.Timestamp(0)
  hash       String   @unique(map: "hash") @db.VarChar(64)
  users      users    @relation(fields: [id_user], references: [id])

  @@index([id_user], map: "iduser")
}

model permissions_list {
  id         Int    @id @default(autoincrement())
  permission String @unique(map: "permission") @db.VarChar(128)
}

model settings {
  id     Int    @id @default(autoincrement())
  config String @unique(map: "config") @db.VarChar(32)
  value  String @db.Text
}
